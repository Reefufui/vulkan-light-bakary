#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_scalar_block_layout  : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_EXT_buffer_reference2 : require

struct shIO
{
    vec3 hitPos;
    vec3 dir;
};

layout(location = 0) callableDataInEXT shIO io;
layout(buffer_reference, scalar) buffer SH  {  vec3 coeffs[]; };

layout(push_constant) uniform Constants
{
    vec3 step;
    vec3 lmax;
    float tmax;
    uint64_t shBufferAddress;
};

const vec3 cubeVertices[8] = vec3[](
            vec3(0.0f, 0.0f, 0.0f),
            vec3(0.0f, 0.0f, 1.0f),
            vec3(0.0f, 1.0f, 0.0f),
            vec3(0.0f, 1.0f, 1.0f),
            vec3(1.0f, 0.0f, 0.0f),
            vec3(1.0f, 0.0f, 1.0f),
            vec3(1.0f, 1.0f, 0.0f),
            vec3(1.0f, 1.0f, 1.0f)
            );

void main()
{
    SH indices  = SH(shBufferAddress);

    vec3 ijk = floor(io.hitPos / step);
    vec3 innerPos = io.hitPos / step - ijk;

    for (int v = 0; v < 8; ++v)
    {
        vec3 target = cubeVertices[v] + ijk;
        float weight = distance(innerPos, v + ijk);
    }
}

