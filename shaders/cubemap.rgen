#version 460
#extension GL_EXT_ray_tracing : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require

#include "random.glsl"
#include "structures.h"

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 1, binding = 0, rgba8) uniform image3D image;

layout(location = 0) rayPayloadEXT vec3 payLoad;

void main()
{
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5f, 0.5f);
    const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = vec4(0, 0, 0, 1);
    vec4 target = vec4(d.x, d.y, 1, 1);
    vec4 direction = vec4(normalize(target.xyz), 0);

    float tmin = 0.001;
    float tmax = 10000.0;

    payLoad = vec3(0.f);

    traceRayEXT(topLevelAS, gl_RayFlagsOpaqueEXT, 0xff, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);

    imageStore(image, ivec3(gl_LaunchIDEXT.xyz), vec4(payLoad, 1.f));
}

